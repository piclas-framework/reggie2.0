# ======================================================================================================================================================================= #
# ruff linter and formater setup file reggie tool for NRG codes and PICLas
# ruff can be installed with "pip install ruff"
# ======================================================================================================================================================================= #
line-length = 220
indent-width = 4
# Needed for pre-commit, which explicitly passes all changed files to the ruff-pre-commit plugin, regardless of whether they're marked as excluded by Ruff's own settings.
force-exclude = true
required-version = ">=0.7.1"
# Whether to show an enumeration of all fixed lint violations
show-fixes = true
# ======================================================================================================================================================================= #
[lint] # ruff linter configuration
select = [
    # pycodestyle
    "E",
    # Pyflakes (Error)
    "F",
    # Pyflakes (Warning)
    "W",
    # flake8-bugbear
    "B",
    # isort
    #"I",
    # pycodestyle -> check doc strings
    "D",
    #flake8-builtins -> check shadowing
    "A",
    #flake8-implicit-str-concat
    "ISC",
    #flake8-import-conventions   mathplotlib as mpl??
    "ICN",
    #flake8-unused-arguments
    "ARG",
    #flake8-todos -> TODOs need to be attached to an issue
    "TD",
    #Perflint -> may increase performance
    "PERF",
    #Ruff-specific rules: check for unused noqa commands
    "RUF100",
] # checks that should be selected

ignore = ["TD002","D100","D101","D102","D105","D107","D212","D400","D415",
         "W191","E111","E114","E117","D206","D300","Q000","Q001","Q002","Q003","COM812","COM819","ISC001","ISC002"]
# checks that should be ignored, always add the error which is suppressed below for faster understanding and possible re-evaluation

#To suppress a violation inline, Ruff uses a noqa system similar to Flake8. To ignore an individual violation, add # noqa: {code} to the end of the line, like so:
# Ignore F841.
#x = 1  # noqa: F841
# Ignore E741 and F841.
#i = 1  # noqa: E741, F841
# Ignore _all_ violations.
#x = 1  # noqa

# User excluded checks:
# TD002  : Missing author in TODO; try: `# todo(<author_name>): ...` or `# todo @<author_name>: ...`
# D100   : Checks for undocumented public module definitions
# D101   : Checks for undocumented public class definitions
# D102   : Checks for undocumented public method definitions
# D105   : Checks for undocumented magic method definitions
# D107   : Checks for public __init__ method definitions that are missing docstrings
# D212   : Checks for docstring summary lines that are not positioned on the first physical line of the docstring
# D400   : Checks for docstrings in which the first line does not end in a period
# D415   : First line should end with a period, question mark, or exclamation point

# When using Ruff as a formatter, we recommend avoiding the following lint rules:
# W191    : tab-indentation
# E111    : indentation-with-invalid-multiple
# E114    : indentation-with-invalid-multiple-comment
# E117    : over-indented
# D206    : indent-with-spaces
# D300    : triple-single-quotes
# Q000    : bad-quotes-inline-string
# Q001    : bad-quotes-multiline-string
# Q002    : bad-quotes-docstring
# Q003    : avoidable-escaped-quote
# COM812  : missing-trailing-comma
# COM819  : prohibited-trailing-comma
# ISC001  : single-line-implicit-string-concatenation
# ISC002  : multi-line-implicit-string-concatenation
    
extend-select = ["D213"]
# checks that should be extensively selected
# possible reasons: - only one check of rules group is wanted
#                   - other options exclude this check (e.g. D213 is excluded by convention = "google", but should be included anyways)
# D213: Checks for docstring summary lines that are not positioned on the second physical line of the docstring.

extend-unsafe-fixes = ["ALL"]
# ruff labels fixes as "safe" and "unsafe". 
# "The meaning and intent of your code will be retained when applying safe fixes, but the meaning could be changed when applying unsafe fixes."
# Here all fixes are set to "unsafe", so all fixes have to be checked by hand or at least with an additional flag "--unsafe-fixes"!

[lint.flake8-import-conventions.aliases] # corresponds to flake8-implicit-str-concat, ICN
# Declare the default aliases
numpy = "np"
pandas = "pd"

[lint.isort] # corresponds to isort, I
# Use two lines after each import block
lines-after-imports = 2

[lint.pydocstyle] # corresponds to pycodestyle, D
# Use google-style docstrings
convention = "google"

# ======================================================================================================================================================================= #
[format]
# Use indent-width spaces for indentation
indent-style = "space"

# Prefer double quotes over single quotes - "single", "double" or "preserve" to keep a mix of single and doubles quotes
quote-style = "preserve"
